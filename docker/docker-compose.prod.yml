version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  influxdb:
    image: influxdb:2.7
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USER}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_BUCKET}
    volumes:
      - influxdb_data:/var/lib/influxdb2

  redis:
    image: redis:7
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    command: gunicorn agentictrader.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_files:/app/static
      - media_files:/app/media
    depends_on:
      - postgres
      - influxdb
      - redis

  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    volumes:
      - static_files:/app/build

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_files:/var/www/static
      - media_files:/var/www/media
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

volumes:
  postgres_data:
  influxdb_data:
  redis_data:
  static_files:
  media_files:
